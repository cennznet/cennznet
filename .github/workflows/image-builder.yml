# Build a docker image on push to develop
# Also tag the image if commit is tagged

name: "Image Builder"

on:
  workflow_run:
    workflows:
      - "Release"
    branches:
      - "release/*"
    types: 
      - completed
  push:
    branches:
      - "develop"
    paths:
      - "**.rs"
      - "**.toml"
      - "**.yml"
      - "**.lock"
      - "genesis/**"
      - "Dockerfile"

jobs:
  build-image:
    # only run if release branch CI build passes or its a push to develop
    if: ${{ (startsWith(github.head_ref, 'release/') && github.event.workflow_run.conclusion == 'success') || (startsWith(github.head_ref, 'develop') && github.event_name == 'push) }}
    runs-on: [self-hosted, linux]
    env:
      IMAGE_NAME: "cennznet/cennznet"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Build üõ† & Publish üê≥
        env:
          DOCKER_LOGIN: ${{ secrets.DOCKER_LOGIN }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        # build and tag an image with commit hash and 'latest'
        # if the commit is tagged, tag the image also e.g. 1.0.0
        run: |
          COMMIT_HASH=$(git rev-parse --short HEAD)
          echo "commit hash: $COMMIT_HASH"
          COMMIT_TAG=$((git describe --exact-match --tags HEAD) || true)
          echo "commit tag(?): $COMMIT_TAG"

          docker build -t "$IMAGE_NAME":"$COMMIT_HASH" -t "$IMAGE_NAME":latest -f ./Dockerfile .

          docker login -u $DOCKER_LOGIN -p $DOCKER_PASSWORD

          docker push $IMAGE_NAME:$COMMIT_HASH
          docker push $IMAGE_NAME:latest
          if [ -n "$COMMIT_TAG" ]; then
            docker tag $IMAGE_NAME:$COMMIT_HASH $IMAGE_NAME:$COMMIT_TAG
            docker push $IMAGE_NAME:$COMMIT_TAG
          fi
      - name: notify success
        if: ${{ success() }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_USERNAME: "status bot"
          SLACK_ICON_EMOJI: ":whale:"
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: "docker image published :white_check_mark:"
      - name: notify failure
        if: ${{ failure() && !cancelled() }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_USERNAME: "status bot"
          SLACK_ICON_EMOJI: ":whale:"
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: "docker image build failed :x:"
          SLACK_COLOR: "#ff0000"
