# Build a docker image on push to develop
# Also tag the image if commit is tagged as an official release
# all releases and CI build an image

# what happens if we have develop push AND release events happen...
name: 'Image Builder'

on:
  pull_request:
    branches:
    - 'ci_test'
  push:
    branches:
    - 'ci_test'

jobs:
  build-image:
    # only run if prechecks pass and the source branch is named 'prerelease/*'
    runs-on: [self-hosted, linux]
    env:
      SCCACHE_CACHE_SIZE: "50G"
      IMAGE_NAME: "cennznet/cennznet"
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build üõ†
      shell: bash
      # build and tag an image with commit hash
      # maybe additional tags:
      # - release commit tag e.g. 1.0.0
      # - 'stable' if not a release candidate
      run: |
        COMMIT_HASH=$(git rev-parse --short HEAD)
        echo "commit hash: $COMMIT_TAG"
        COMMIT_TAG=${GITHUB_REF#refs/*/}
        echo "commit tag(?): $COMMIT_TAG"

        docker build -t "$IMAGE_NAME":"$COMMIT_HASH" -t "$IMAGE_NAME":latest -f ./Dockerfile .

        ([ -n "$COMMIT_TAG" ] && docker tag "$IMAGE_NAME":"$COMMIT_HASH" "$IMAGE_NAME":"$COMMIT_TAG") || true
        ([[ "$COMMIT_TAG" = *"rc"* ]] && docker tag "$IMAGE_NAME":"$COMMIT_HASH" "$IMAGE_NAME":stable) || true
    # - name: Publish üê≥
    #   env:
    #     DOCKER_LOGIN: ${{ secrets.DOCKER_LOGIN }}
    #     DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    #   run: |
    #     docker login -u $DOCKER_LOGIN -p $DOCKER_PASSWORD
    #     docker push $IMAGE_NAME:latest --all-tags
